// { Driver Code Starts
	#include<bits/stdc++.h> 
	using namespace std; 
	
	 // } Driver Code Ends
	class Solution
	{
	public:
	    int setKthBit(int N, int K)
	    {
	        // Write Your Code here
	         return N |(1<<K) ;
	    }
	    
	};
	
	
	
	
	// { Driver Code Starts.
	int main()
	{
	    int t;
	    cin >> t;
	    while (t--)
	    {
	        int N, K;
	        cin >> N >> K;
	        
	        Solution ob;
	        int ans = ob.setKthBit(N,K);
	        cout << ans << endl;
	    }
	    return 0;
	} 


A2 PROGRAM

/Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends
//User function Template for C++

/*  Function to calculate the longest consecutive ones
*   N: given input to calculate the longest consecutive ones
*/
class Solution
{
    public:
    int maxConsecutiveOnes(int N)
    {
        // code here
        int ans = 0;
        while(N)
        {
            int x = 0;
            while(N & 1)
            {
                x ++;
                N >>= 1;
            }
            ans = max(ans, x);
            N >>= 1;
        }
        return ans;
    }
};


// { Driver Code Starts.

// Driver Code
int main() {
	int t;
	cin>>t;//testcases
	while(t--)
	{
		int n;
		cin>>n;//input n
		Solution obj;
		//calling maxConsecutiveOnes() function
		cout<<obj.maxConsecutiveOnes(n)<<endl;
	}
	return 0;
}  // } Driver Code Ends


A3 PROGRAM

// { Driver Code Starts
	// Initial Template for C++
	#include <bits/stdc++.h>
	using namespace std;
	
	 // } Driver Code Ends
	// User function Template for C++
	class Solution {
	  public:
	    long long int convertEvenBitToZero(long long int n) {
	        // code here
	        return (n & 0xAAAAAAAA);
	    }
	};
	
	// { Driver Code Starts.
	int main() {
	    int t;
	    cin >> t;
	    while (t--) {
	        long long int n;
	        cin >> n;
	        Solution ob;
	        cout << ob.convertEvenBitToZero(n) << endl;
	    }
	    return 0;
	}
	  // } Driver Code Ends

LEVEL B

B4 PROGRAM

#include<bits/stdc++.h>
	using namespace std;
	int main()
	{
		ios_base::sync_with_stdio(false);
		cin.tie(NULL);
		cout.tie(NULL);
		
		long long factorial[100000+1];
		factorial[0] = 1;
		for(int i=1; i<=100000; i++)
		{
			factorial[i] = (i*factorial[i-1])%1000000007;
		}
		
		long long t,n;
		cin>>t;
		while(t--)
		{
			cin>>n;
	        cout<<factorial[n]<<"\n";
		}
	}











